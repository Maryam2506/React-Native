{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Sam\\\\rn-starter\\\\src\\\\components\\\\screens\\\\ColorScreen.js\";\nimport React, { useState } from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\n\nvar ColorScreen = function ColorScreen() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      colors = _useState2[0],\n      setColors = _useState2[1];\n\n  console.log(colors);\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, React.createElement(Button, {\n    title: \"Add a color\",\n    onPress: function onPress() {\n      setColors([].concat(_toConsumableArray(colors), [randomRgb()]));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: {\n      height: 200,\n      width: \"100%\",\n      backgroundColor: randomRgb()\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }), React.createElement(FlatList, {\n    data: colors,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: {\n          height: 100,\n          width: 100,\n          backgroundColor: item\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 19\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar randomRgb = function randomRgb() {\n  var red = Math.floor(Math.random() * 256);\n  var blue = Math.floor(Math.random() * 256);\n  var green = Math.floor(Math.random() * 256);\n  return \"rgb(\" + red + \", \" + blue + \", \" + green + \")\";\n};\n\nvar styles = StyleSheet.create({});\nexport default ColorScreen;","map":{"version":3,"sources":["C:/Users/Sam/rn-starter/src/components/screens/ColorScreen.js"],"names":["React","useState","ColorScreen","colors","setColors","console","log","randomRgb","height","width","backgroundColor","item","red","Math","floor","random","blue","green","styles","StyleSheet","create"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;AAIA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAAA,kBACID,QAAQ,CAAC,EAAD,CADZ;AAAA;AAAA,MACjBE,MADiB;AAAA,MACTC,SADS;;AAExBC,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,aADR;AAEE,IAAA,OAAO,EAAE,mBAAM;AACbC,MAAAA,SAAS,8BAAKD,MAAL,IAAaI,SAAS,EAAtB,GAAT;AACD,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE,GAAV;AAAeC,MAAAA,KAAK,EAAE,MAAtB;AAA8BC,MAAAA,eAAe,EAAEH,SAAS;AAAxD,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAUE,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEJ,MAAhB;AACA,IAAA,UAAU,EAAE,0BAAY;AAAA,UAAVQ,IAAU,QAAVA,IAAU;AACpB,aAAQ,oBAAC,IAAD;AACR,QAAA,KAAK,EAAE;AAAEH,UAAAA,MAAM,EAAE,GAAV;AAAeC,UAAAA,KAAK,EAAE,GAAtB;AAA2BC,UAAAA,eAAe,EAAEC;AAA5C,SADC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAR;AAGH,KALD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF;AAmBD,CAtBD;;AAuBA,IAAMJ,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB,MAAMK,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAZ;AACA,MAAMC,IAAI,GAAGH,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAb;AACA,MAAME,KAAK,GAAGJ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAd;AAEA,kBAAcH,GAAd,UAAsBI,IAAtB,UAA+BC,KAA/B;AACD,CAND;;AAQA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf;AAEA,eAAelB,WAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { FlatList } from \"react-native\";\r\nimport { View, StyleSheet, Button } from \"react-native\";\r\n\r\nconst ColorScreen = () => {\r\n  const [colors, setColors] = useState([]);\r\n  console.log(colors);\r\n  return (\r\n    <View>\r\n      <Button\r\n        title=\"Add a color\"\r\n        onPress={() => {\r\n          setColors([...colors, randomRgb()]);\r\n        }}\r\n      />\r\n      <View\r\n        style={{ height: 200, width: \"100%\", backgroundColor: randomRgb() }}\r\n      />\r\n      <FlatList data={colors}\r\n      renderItem={({item}) => {\r\n          return  <View\r\n          style={{ height: 100, width: 100, backgroundColor: item }}\r\n        />\r\n      }}/>\r\n    </View>\r\n  );\r\n};\r\nconst randomRgb = () => {\r\n  const red = Math.floor(Math.random() * 256);\r\n  const blue = Math.floor(Math.random() * 256);\r\n  const green = Math.floor(Math.random() * 256);\r\n\r\n  return `rgb(${red}, ${blue}, ${green})`;\r\n};\r\n\r\nconst styles = StyleSheet.create({});\r\n\r\nexport default ColorScreen;\r\n"]},"metadata":{},"sourceType":"module"}